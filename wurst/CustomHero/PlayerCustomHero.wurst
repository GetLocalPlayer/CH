package PlayerCustomHero
import LinkedList
import ClosureEvents
import UnitIds
import UnitObjEditing
import ObjectIdGenerator
import CustomHero
import BootsOfSalvation
import Base
import Statistic
import ChatCommand



unit array playerCustomHero

public function player.getCustomHero() returns unit
	return playerCustomHero[this.getId()]

public let customHeroes = CreateGroup()

constant STARTING_ITEM_ID = BootsOfSalvation.ID
constant STARTING_GOLD = 300
constant STARTING_LUMBER = 3
constant STARTING_SKILL_POINTS = 15
constant SPAWN_RECT = baseEntranceRect


/* Drops a player replacing it with a sheep under it's control:
-drop X
Where X is the number of a player in the statistic board. */
constant COMMAND_DROP = "drop"
constant SHEEP_ID = compiletime(UNIT_ID_GEN.next())


@compiletime function buildSheep()
	new UnitDefinition(SHEEP_ID, UnitIds.sheep)
	..setHitPointsMaximumBase(5000)
	..setHitPointsRegenerationRate(5000)


init
	let list = CustomHero.meleeIds.copy()
	for i = 0 to bj_MAX_PLAYER_SLOTS - 1
		let p = players[i]
		if p.getController() == MAP_CONTROL_USER and p.getSlotState() == PLAYER_SLOT_STATE_PLAYING
			let random = GetRandomInt(0, list.size() - 1)
			let u = createUnit(p, list.get(random), SPAWN_RECT.randomPoint(), angle(0))
			u.addItemById(STARTING_ITEM_ID).setPlayer(p, true)
			u.setSkillPoints(STARTING_SKILL_POINTS)
			list.removeAt(random)
			p..panCamToTimed(u, 0)
			..select(u)
			..setState(PLAYER_STATE_RESOURCE_LUMBER , STARTING_LUMBER)
			..setState(PLAYER_STATE_RESOURCE_GOLD  , STARTING_GOLD)
			playerCustomHero[p.getId()] = u
			customHeroes.add(u)
			SetPlayerHandicapXP(p, 0)

	EventListener.add(EVENT_PLAYER_LEAVE) ->
		let p = EventData.getTriggerPlayer()
		customHeroes.remove(p.getCustomHero())
		p.getCustomHero().remove()
		playerCustomHero[p.getId()] = null

	
