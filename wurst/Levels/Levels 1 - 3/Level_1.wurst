package Level_1
import OrderIds
import ForceProperties
import public Level
import ClosureTimers


public Level level_1

let normalId = 'n00D'
let eliteId = 'n01F'
let gate = gg_dest_ZTd5_0357
let entrance = gg_rct_Level_1_Entrance
let leftSpawn = gg_rct_Level_1_Left
let rightSpawn = gg_rct_Level_1_Right
let exit = gg_rct_Level_1_Portal
let waves = 2
let delay = 4.


class Level_1 extends Level
	construct(rect entrance, vec2 exit, int waves)
		super(entrance, exit, waves)

	override function onStart()
		if countWaves == 1
			gate.kill()
		doAfter(delay) -> 
			// Left
			for i = 1 to 2
				let u = createUnit(enemyPlayer, eliteId, leftSpawn.randomPoint(), GetRandomReal(1, 360).asAngleDegrees())
				..issuePointOrderById(OrderIds.patrol, entrance.randomPoint())
				addEnemy(u)
			for i = 1 to 12
				let u = createUnit(enemyPlayer, normalId, leftSpawn.randomPoint(), GetRandomReal(1, 360).asAngleDegrees())
				..issuePointOrderById(OrderIds.patrol, entrance.randomPoint())
				addEnemy(u)
			// Right
			for i = 1 to 2
				let u = createUnit(enemyPlayer, eliteId, rightSpawn.randomPoint(), GetRandomReal(1, 360).asAngleDegrees())
				..issuePointOrderById(OrderIds.patrol, entrance.randomPoint())
				addEnemy(u)
			for i = 1 to 12
				let u = createUnit(enemyPlayer, normalId, rightSpawn.randomPoint(), GetRandomReal(1, 360).asAngleDegrees())
				..issuePointOrderById(OrderIds.patrol, entrance.randomPoint())
				addEnemy(u)

	override function onFinish()
		skip

	override function onReset()
		gate.restoreLife(gate.getMaxLife(), true)


init
	level_1 = new Level_1(entrance, exit.getCenter(), waves)