package InitLevels
import LinkedList
import HashMap
import Portal
import InitCustomHero
import ChatCommand
import Base

import Level

import Level_1
import Level_2
import Level_3
import Level_4
import Level_5


constant COMMAND_GO_LEVEL = "GoLevel"
constant COMMAND_GO_LEVEL_SHORT = "gl"
constant COMMAND_RESET_ALL_LEVELS = "ResetAllLevels"
constant COMMAND_RESET_ALL_LEVELS_SHORT = "ral"
constant COMMAND_RESET_LEVEL = "ResetLevel"
constant COMMAND_RESET_LEVEL_SHORT = "rl"


constant PORTAL_FX = LEVEL_PORTAL_FX
constant real PORTAL_FX_SCALE = LEVEL_PORTAL_FX_SCALE
constant PORTAL_FX_AREA = LEVEL_PORTAL_FX_AREA
constant real PORTAL_FX_AREA_SCALE = LEVEL_PORTAL_FX_AREA_SCALE
constant PORTAL_FX_TARGET = LEVEL_PORTAL_FX_TARGET
constant real PORTAL_FX_TARGET_SCALE = LEVEL_PORTAL_FX_TARGET_SCALE
constant real PORTAL_AOE = LEVEL_PORTAL_AOE

constant BASE_EXIT = gg_rct_LevelPortal


let levels = asList<Level>(
	Level_1.instance(),
	Level_2.instance(),
	Level_3.instance(),
	Level_4.instance(),
	Level_5.instance())


function initChatCommands()
	var cb = ChatCommand.register(COMMAND_GO_LEVEL) (string subcommand) ->
		let i = subcommand.toInt()
		if i.isBetween(1, levels.size())
			EventData.getTriggerPlayer().getCustomHero().setPos(levels.get(i - 1).getEntrance().randomPoint())
		else	
			print("Only {0} levels exist.".format(levels.size().toString()))

	ChatCommand.register(COMMAND_GO_LEVEL_SHORT, cb)
		
	cb = ChatCommand.register(COMMAND_RESET_ALL_LEVELS) (string subcommand) ->
		var allReset = true
		for i = 0 to levels.size() - 1
			print("Resetting level {0}.".format((i + 1).toString()))
			allReset = allReset and levels.get(i).reset()
		if not baseRect.contains(localPlayer.getCustomHero().getPos())
			localPlayer.getCustomHero().setPos(baseEntranceRect.randomPoint())

	ChatCommand.register(COMMAND_RESET_ALL_LEVELS_SHORT, cb)

	cb = ChatCommand.register(COMMAND_RESET_LEVEL) (string subcommand) ->
		let i = subcommand.toInt()
		if i.isBetween(1, levels.size())
			print("Resetting level {0}.".format((i).toString()))
			levels.get(i - 1).reset()
		else
			print("Only {0} levels exist.".format(levels.size().toString()))

	ChatCommand.register(COMMAND_RESET_LEVEL_SHORT, cb)


init
	addEffect(PORTAL_FX, BASE_EXIT.getCenter())
	..setScale(PORTAL_FX_SCALE)

	let enteringIndex = new HashMap<unit, int>
	let portals = new HashMap<unit, Portal>

	for u in customHeroes
		enteringIndex.put(u, 0)

		let p = new Portal(BASE_EXIT.getCenter(), PORTAL_AOE, (enteringUnit) -> enteringUnit == u)
		p..setDestination(levels.get(0).getEntrance())
		..onEnter() (unit enteringUnit, vec2 target) ->
			addEffect(PORTAL_FX_AREA, enteringUnit.getPos())
			..setScale(PORTAL_FX_AREA_SCALE)
			..destr()
			addEffect(PORTAL_FX_TARGET, target)
			..setScale(PORTAL_FX_TARGET_SCALE)
			..destr()
			var index = enteringIndex.get(u)
			index = index == levels.size() - 1 ? 0 : index + 1
			enteringIndex.put(u, index)
			p.setDestination(levels.get(index).getEntrance())
			u.getOwner().panCameraToTimed(target, 0)
		portals.put(u, p)

	if bj_isSinglePlayer
		initChatCommands()
				
		