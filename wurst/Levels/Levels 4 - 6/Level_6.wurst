package Level_6
import AbilityObjEditing
import BuffObjEditing
import ObjectIdGenerator
import ObjectIds

import Assets
import OrderIds
import LinkedList
import ClosureEvents
import ClosureForGroups
import SoundUtils
import Raycast
import Interpolation
import Preloader

import ForceProperties
import StoredClosureTimers
import ScaledLevel
import LigthingEx
import InitCustomHero


constant BOSS_ID = 'n012'

constant SPLASH_ATTACK_TYPE = ATTACK_TYPE_NORMAL
constant SPLASH_DAMAGE_TYPE = DAMAGE_TYPE_LIGHTNING
constant SPLASH_WEAPON_TYPE = WEAPON_TYPE_WHOKNOWS
constant real SPLASH_AOE = 250
constant real SPLASH_DAMAGE_FACTOR = 0.25
constant int SPLASH_MAX_TARGETS = 5
constant real SPLASH_MANA_PER_HIT = 0.1
constant SPLASH_LIGHTNING = LIGHTNING_CHAIN_LIGHTNING_PRIMARY
constant real SPLASH_LIGHTNING_LIFETIME = 1
constant real SPLASH_LIGHTNING_FADEPOINT = 0.5
constant SPLASH_LIGHTING_IMPACT_OFFSET = vec3(0, 0, 50)
constant SPLASH_HIT_FX = Abilities.manaFlareBoltImpact
constant SPLASH_HIT_FX_ATTACH = "origin"

constant TORNADO_FX = Abilities.tornadoElementalSmall
constant TORNADO_DAMAGE_FX = Abilities.stampedeMissileDeath
constant TORNADO_DAMAGE_FX_ATTACH = "chest"
constant real TORNADO_CD = 15
constant real TORNADO_FX_SCALE = 1.2
constant real TORNADO_DAMAGE = 150
constant TORNADO_ATTACK_TYPE = ATTACK_TYPE_NORMAL
constant TORNADO_DAMAGE_TYPE = DAMAGE_TYPE_SONIC
constant TORNADO_WEAPON_TYPE = WEAPON_TYPE_WHOKNOWS
constant real TORNADO_AOE = 100
constant real TORNADO_SPEED = 360
constant real TORNADO_BIRTH_DELAY = 1.5
constant real TORNADO_DEATH_DELAY = 1.5
constant real TORNADO_CAST_TIME = 2
constant TORNADO_CAST_ANIM = "spell"

init	
	Preload(TORNADO_FX)
	Preload(TORNADO_DAMAGE_FX)


constant GUARDIAN_ID = 'n001'
constant GUARDIAN_SPAWN_FX = Objects.impaleTargetDust
constant real GUARDIAN_SPAWN_CD = 11
constant int GUARDIANS_PER_SPAWN = 3
constant int MAX_GUARDIANS = 20

constant THUNDER_CLAP_ID = compiletime(ABIL_ID_GEN.next())
constant real THUNDER_CLAP_DAMAGE = 100
constant real THUNDER_CLAP_AOE = 200
constant real THUNDER_CLAP_CD = 9
constant real THUNDER_CLAP_SLOW = 0.3
constant real THUNDER_CLAP_DURATION = 3.
constant THUNDER_CLAP_ICON = Icons.bTNCrushingWave
constant THUNDER_CLAP_FX = Objects.nagaDeath
constant THUNDER_CLAP_FX_OFFSET = vec3(0, 0, -40)
constant real THUNDER_CLAP_FX_SCALE = 1.75

@compiletime
function buildThunderClap()
	let buffDef = new BuffDefinition(BUFF_ID_GEN.next(), BuffIds.thunderClap)
	..setIcon(THUNDER_CLAP_ICON)
	new AbilityDefinitionMountainKingThunderClap(THUNDER_CLAP_ID)
	..setHeroAbility(false)
	..setLevels(1)
	..setIconNormal(THUNDER_CLAP_ICON)
	..setArtCaster("")
	..setCooldown(1, 999999)
	..setManaCost(1, 0)
	..setAreaofEffect(1, THUNDER_CLAP_AOE)
	..setAOEDamage(1, THUNDER_CLAP_DAMAGE)
	..setDurationHero(1, THUNDER_CLAP_DURATION)
	..setDurationNormal(1, THUNDER_CLAP_DURATION)
	..setAttackSpeedReduction(1, 0)
	..setMovementSpeedReduction(1, THUNDER_CLAP_SLOW)
	..setBuffs(1, buffDef.getNewId().toRawCode())

init
	preloadAbility(THUNDER_CLAP_ID)
	Preload(THUNDER_CLAP_FX)

	EventListener.onCast(THUNDER_CLAP_ID) (unit caster) ->
		addEffect(THUNDER_CLAP_FX, caster.getPos3Real() + THUNDER_CLAP_FX_OFFSET)
		..setScale(THUNDER_CLAP_FX_SCALE)
		..destr()		
	


constant PATH_BLOCKER_ID = 'B006'

let spawnSound = new SoundDefinition("Sound\\Interface\\QuestFailed.wav")

let entrance = gg_rct_Level_6_Entrance
let exit = gg_rct_Level_6_Portal

let spawn = gg_rct_Level_6_Spawn.getCenter()
let battlefieldListenerRect = gg_rct_Level_6_Battlefield_Listener
let battlefieldVisionRect = gg_rct_Level_6_Battlefield_Vision
let battlefieldCenter = gg_rct_Level_6_Battlefield_Center.getCenter()
let pathBlockersRect = gg_rct_Level_6_Path_Blocker
let guardianSpawnRects = asList<rect>(
	gg_rct_Level_6_Guardian_Spawn_1,
	gg_rct_Level_6_Guardian_Spawn_2,
	gg_rct_Level_6_Guardian_Spawn_3,
	gg_rct_Level_6_Guardian_Spawn_4,
	gg_rct_Level_6_Guardian_Spawn_5,
	gg_rct_Level_6_Guardian_Spawn_6,
	gg_rct_Level_6_Guardian_Spawn_7,
	gg_rct_Level_6_Guardian_Spawn_8,
	gg_rct_Level_6_Guardian_Spawn_9,
	gg_rct_Level_6_Guardian_Spawn_10,
	gg_rct_Level_6_Guardian_Spawn_11,
	gg_rct_Level_6_Guardian_Spawn_12,
	gg_rct_Level_6_Guardian_Spawn_13)

constant real BATTLEFIELD_RADIUS = 650 // Used for raycast on tornado cast

fogmodifier array vision
fogmodifier array blackMask


public class Level_6 extends ScaledLevel
	use MStoredClosureTimers

	private let pathBlockers = new LinkedList<destructable>
	private let enumGroup = CreateGroup()
	private let effects = new LinkedList<effect>
	private let guardians = CreateGroup()
	private unit boss
	
	private static let instance = new Level_6

	static function instance() returns Level_6
		return instance

	private construct()
		super(entrance, exit.getCenter(), 1)

		forDestructablesInRect(pathBlockersRect) (destructable d) ->
			if d.getTypeId() == PATH_BLOCKER_ID
				pathBlockers.add(d)
				d..kill()
				..show(false)
		for u in customHeroes
			vision[u.getOwner().getId()] = createVision(u.getOwner(), battlefieldVisionRect, false)
			blackMask[u.getOwner().getId()] = createBlackMask(u.getOwner(), battlefieldVisionRect, false, false)

		EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
			let u = EventData.getDyingUnit()
			if isInProgress() and guardians.has(u)
				if guardians.size() == MAX_GUARDIANS
					startGuardianSpawn()
				guardians.remove(u)

		EventListener.add(EVENT_PLAYER_UNIT_DAMAGING) ->
			let attacker = EventData.getEventDamageSource()
			if attacker == boss and BlzGetEventIsAttack()
				let target = EventData.getTriggerUnit()
				let damage = EventData.getEventDamage() * SPLASH_DAMAGE_FACTOR
				forUnitsInRange(target.getPos(), SPLASH_AOE, true) (unit u) ->
					if u.isEnemyOf(attacker) and not u.isType(UNIT_TYPE_MAGIC_IMMUNE) and u.isAlive() and u != target
						enumGroup.add(u)
				while enumGroup.size() > SPLASH_MAX_TARGETS
					enumGroup.remove(enumGroup.getRandom())
				for u from enumGroup
					attacker.damageTarget(u, damage, false, false, SPLASH_ATTACK_TYPE, SPLASH_DAMAGE_TYPE, SPLASH_WEAPON_TYPE)
					new LigthingEx(SPLASH_LIGHTNING, target, u, SPLASH_LIGHTING_IMPACT_OFFSET, SPLASH_LIGHTING_IMPACT_OFFSET)
					..setLifetime(SPLASH_LIGHTNING_LIFETIME)
					..setFadepoint(SPLASH_LIGHTNING_FADEPOINT)
					flashEffect(SPLASH_HIT_FX, u, SPLASH_HIT_FX_ATTACH)
	
	override function onInit()
		for d in pathBlockers
			d..kill()
			..show(false)
		boss = createUnit(enemyPlayer, BOSS_ID, spawn, 270 .asAngleDegrees())
		..pause()
		..hide()
		..setInvulnerable(true)
		..setMana(0)
		addEnemy(boss, 1)

	override function onRun(int waveNumber)
		hideProgressBar()
		doPeriodically(ANIMATION_PERIOD) (cb) ->
			var ready = true
			for u in customHeroes
				if u.isAlive() and not battlefieldListenerRect.contains(u.getPos())
					ready = false
					break
			if ready
				destroy cb
				for u in customHeroes
					vision[u.getOwner().getId()].start()
				for d in pathBlockers
					d..show(true)
					..restoreLife(d.getMaxLife(), true)
				for u in customHeroes
					boss.shareVision(u.getOwner())
					u.pause()
					u.getOwner().setCameraTargetControllerNoZ(boss, ZERO2, false)
				startSpawnScene()

	private function startSpawnScene()
		spawnSound.play()
		
		let tornadoCount = 6
		let fallDuration = 7.
		let fallHeight = 1000.
		let rotSpeed = (80).asAngleDegrees()

		boss..show()
		..setFlyHeight(boss.getFlyHeight() + fallHeight, 0)
		..setFlyHeight(boss.getFlyHeight() - fallHeight, fallHeight / fallDuration)

		let bossPos = boss.getPos()
		for i = 1 to tornadoCount
			let a = (360 / tornadoCount * i).asAngleDegrees()
			let p = boss.getPos().polarOffset(a, TORNADO_AOE)
			let fx = addEffect(TORNADO_FX, p)
			..setScale(TORNADO_FX_SCALE)
			effects.add(fx)
			doPeriodicallyTimed(ANIMATION_PERIOD, fallDuration) (cbFall) ->
				let newP = bossPos.polarOffset(a + rotSpeed * fallDuration * cbFall.progress(), TORNADO_AOE)
				fx.setPos(newP)
				if cbFall.isLast()
					let ray = ray2d(newP, bossPos.normalizedPointerTo(newP))
					let result = ray.castToCircle(battlefieldCenter, BATTLEFIELD_RADIUS).first
					doPeriodicallyTimed(ANIMATION_PERIOD, result.distance / TORNADO_SPEED) (cbTornado) ->
						fx.setPos(newP.lerp(result.point, cbTornado.progress()))
						if cbTornado.isLast()
							fx.destr()
							effects.remove(fx)
							if effects.isEmpty()
								startFight()

	private function startFight()
		for u in customHeroes
			u.unpause()
			u.getOwner().resetToGameCamera(0)

		boss..setInvulnerable(false)
		..unpause()
		..setMana(0)

		doPeriodically(TORNADO_CD) (cb) ->
			for u in customHeroes
				if u.isAlive()
					enumGroup.add(u)
			let p = enumGroup.getRandom().getPos()
			enumGroup.clear()
			let ray = ray2d(boss.getPos(), boss.getPos().normalizedPointerTo(p))
			let result = ray.castToCircle(battlefieldCenter, BATTLEFIELD_RADIUS).first
			if result.intersects
				castTornado(result.point)

		startGuardianSpawn()

		doPeriodically(THUNDER_CLAP_CD) (cb) ->
			for u in guardians
				for hero in customHeroes
					if hero.isInRange(u.getPos(), THUNDER_CLAP_AOE)
						enumGroup.add(u)
			if not enumGroup.isEmpty()
				let u = enumGroup.getRandom()
				u..setPos(u.getPos())
				..endAbilityCooldown(THUNDER_CLAP_ID)
				..issueImmediateOrderById(OrderIds.thunderclap)
			else if not guardians.isEmpty()
				let u = guardians.getRandom()
				u..setPos(u.getPos())
				..endAbilityCooldown(THUNDER_CLAP_ID)
				..issueImmediateOrderById(OrderIds.thunderclap)
			enumGroup.clear()

	private function startGuardianSpawn()
		let cbAreaFx = doPeriodically(1) (cb) ->
			flashEffect(GUARDIAN_SPAWN_FX, guardianSpawnRects.getRandomElement().randomPoint())

		doPeriodically(GUARDIAN_SPAWN_CD) (cb) ->
			for i = 1 to (GUARDIANS_PER_SPAWN + guardians.size()) <= MAX_GUARDIANS ? GUARDIANS_PER_SPAWN : MAX_GUARDIANS - guardians.size()
				let p = guardianSpawnRects.getRandomElement().randomPoint()
				let u = createUnit(enemyPlayer, GUARDIAN_ID, p, GetRandomReal(0, 360).asAngleDegrees())
				..addAbility(THUNDER_CLAP_ID)
				//..addAbility(AbilityIds.selectHero)
				BlzStartUnitAbilityCooldown(u, THUNDER_CLAP_ID, 999999)
				flashEffect(GUARDIAN_SPAWN_FX, u.getPos())
				scaleUnit(u)
				guardians.add(u)
			if guardians.size() == MAX_GUARDIANS
				destroy cb
				destroy cbAreaFx
			
	private function castTornado(vec2 target)
		boss..pauseEx()
		..setFacing(boss.getPos().angleTo(target))
		..setAnimation(TORNADO_CAST_ANIM)
		..queueAnimation(TORNADO_CAST_ANIM)
		let bossPos = boss.getPos()
		let fx = addEffect(TORNADO_FX, bossPos)
		..setScale(TORNADO_FX_SCALE)
		effects.add(fx)
		doAfter(TORNADO_BIRTH_DELAY) -> 
			boss.unpauseEx()
			doPeriodicallyTimed(ANIMATION_PERIOD, bossPos.distanceTo(target) / TORNADO_SPEED) (cb) ->
				let p = bossPos.lerp(target, cb.progress())
				fx.setPos(p)
				forUnitsInRange(p, TORNADO_AOE, true) (unit u) ->
					if u.isAlive() and not u.isType(UNIT_TYPE_MAGIC_IMMUNE) and u.isEnemyOf(boss)
						u.setXY(p)
				if cb.isLast()
					destroy cb
					fx.destr()
					effects.remove(fx)
					doPeriodicallyTimed(ANIMATION_PERIOD, TORNADO_DEATH_DELAY) (cb) ->
						forUnitsInRange(p, TORNADO_AOE, true) (unit u) ->
							if u.isAlive() and not u.isType(UNIT_TYPE_MAGIC_IMMUNE) and u.isEnemyOf(boss)
								u.setXY(p)
								if cb.isLast()
									boss.damageTarget(u, TORNADO_DAMAGE, false, false, TORNADO_ATTACK_TYPE, TORNADO_DAMAGE_TYPE, TORNADO_WEAPON_TYPE)
									flashEffect(TORNADO_DAMAGE_FX, u, TORNADO_DAMAGE_FX_ATTACH)

	private function clear()
		clearTimers()
		for e in effects
			e.destr()
		for d in pathBlockers
			d.kill()
		for u in customHeroes
			u.unpause()
			u.getOwner().resetToGameCamera(0)
		for u in guardians
			u.kill()
		boss = null
							
	override function onFinish()
		clear()
		guardians.clear()
		for u in customHeroes
			vision[u.getOwner().getId()].stop()
			blackMask[u.getOwner().getId()].stop()

	override function onReset()
		clear()
		for u from guardians
			u.remove()
		for u in customHeroes
			vision[u.getOwner().getId()].stop()
			blackMask[u.getOwner().getId()]..start()
			..stop()