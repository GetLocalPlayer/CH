package LavaSpawn
import Assets
import ChannelAbilityPreset
import AbilityTooltipGenerator
import EarthServantShop
import HotkeyFactory

import ClosureTimers
import ClosureForGroups
import ClosureEvents
import Interpolation
import HashMap
import Preloader


public class LavaSpawn
	static constant int SHOP_COST = 1
	static constant int LEVELS = 5

	static constant ICON = Icons.bTNLavaSpawn
	static constant HOTKEY = getHotkey()
	static constant NAME = "Lava Spawn"
	static constant DESCRIPTION = "Summons fire creatures from the bowels of the earth to fight the hero's enemies. Each summoned creature deals damage on landing."

	static constant int array MANACOST = [110, 125, 140, 155, 170]
	static constant real array CHANNELING_TIME = [1.2, 1.2, 1.2, 1.2, 1.2]
	static constant real AOE = 175.
	static constant real COOLDOWN = 7.

	static constant real LANDING_DAMAGE = 28.
	static constant real LANDING_AOE = 200.

	static constant real SPAWN_LIFETIME = 9.5
	static constant real SPAWN_INTERVAL = 0.2
	static constant int SPAWN_SIGHT_RADIUS = 400
	static constant int SPAWN_HEALTH = 100
	static constant int array SPAWN_DAMAGE_BASE = [4, 5, 6, 7, 8]
	static constant int SPAWN_DAMAGE_DICE = 2
	static constant int SPAWN_DAMAGE_SIDE = 2
	static constant int SPAWN_MOVEMENT_SPEED = 200
	static constant real SPAWN_ATTACK_RANGE = 350.
	static constant real SPAWN_COLLISION_SIZE = 10.
	static constant real SPAWN_SCALE = .8
	static constant real SPAWN_BIRTH_ANIM_DURATION = 0.667

	static constant PROJECTILE_MODEL = Abilities.lavaSpawnBirthMissile
	static constant real PROJECTILE_ARC_HEIGHT = 250.
	static constant real PROJECTILE_FLIGHT_TIME = 1.5

	static constant ID = compiletime(HERO_ID_GEN.next())
	static constant UNIT_ID = compiletime(UNIT_ID_GEN.next())

	@compiletime
	private static function build()
		let tooltipGen = new AbilityTooltipGenerator(NAME, DESCRIPTION)
		new ChannelAbilityPreset(ID, LEVELS, true)
		..setIconNormal(ICON)
		..setName(NAME)
		..presetHotkey(HOTKEY)
		..setHeroAbility(true)
		..setRequirements("")
		..setRace(Race.Human)
		..setArtTarget("")
		..registerTooltipGenerator(tooltipGen)
		..tooltipStartListen()
		..setLevels(LEVELS)
		..presetAreaofEffect(lvl -> AOE)
		..presetManaCost((int lvl) -> MANACOST[lvl - 1])
		..presetCooldown((int lvl) -> COOLDOWN)
		..addTooltipProperty("Follow Through Time", (int lvl) -> CHANNELING_TIME[lvl - 1].toString())
		..addTooltipProperty("Spawn Interval", (int lvl) -> SPAWN_INTERVAL.toString() + " sec.")
		..addTooltipProperty("Spawn Lifetime", (int lvl) -> SPAWN_LIFETIME.toString() + " sec.")
		..addTooltipProperty("Spawn Damage", (int lvl) -> "{0}-{1}".format((SPAWN_DAMAGE_BASE[lvl - 1] + SPAWN_DAMAGE_DICE).toString(),(SPAWN_DAMAGE_BASE[lvl - 1] + SPAWN_DAMAGE_DICE*SPAWN_DAMAGE_SIDE).toString()))
		..addTooltipProperty("Landing AoE", (int lvl) -> LANDING_AOE.toInt())
		..addTooltipProperty("Landing Damage", (int lvl) -> LANDING_DAMAGE.toInt())
		..tooltipStopListen()
		..presetFollowThroughTime((int lvl) -> CHANNELING_TIME[lvl - 1] + SPAWN_INTERVAL/2)
		..presetTargetsAllowed(lvl -> TargetsAllowed.enemies)
		..presetOption(Option.VISIBLE, true)
		..presetOption(Option.TARGETIMAGE, true)
		..presetTargetType((int lvl) -> Targettype.POINT castTo int)
		..presetDisableOtherAbilities((int lvl) -> false)
		..presetArtDuration((int lvl) -> CHANNELING_TIME[lvl - 1])
		..presetCastingTime((int lvl) -> 0)
		earthServantShopDef.addAbilitySold(ID, false, ICON, NAME, tooltipGen.getTooltipLearnExtended(), SHOP_COST)
		new UnitDefinition(UNIT_ID, UnitIds.lavaspawn)
		..setAttack1AttackType(AttackType.Pierce)
		..setAttack1DamageBase(1)
		..setAttack1DamageNumberofDice(SPAWN_DAMAGE_DICE)
		..setAttack1DamageSidesperDie(SPAWN_DAMAGE_SIDE)
		..setArmorType(ArmorType.Normal)
		..setSpeedBase(SPAWN_MOVEMENT_SPEED)
		..setCollisionSize(SPAWN_COLLISION_SIZE)
		..setSightRadiusDay(SPAWN_SIGHT_RADIUS)
		..setSightRadiusNight(SPAWN_SIGHT_RADIUS)
		..setScalingValue(SPAWN_SCALE)
		..setSelectionScale(SPAWN_SCALE)
		..setHitPointsMaximumBase(SPAWN_HEALTH)

	protected static function onInit()
		preloadUnit(UNIT_ID)
		
		let channelingUnits = new HashMap<unit, CallbackCounted>

		EventListener.onPointCast(ID) (unit caster, vec2 target) ->
			let lvl = caster.getAbilityLevel(ID)
			let cbChanneling = doPeriodicallyTimed(SPAWN_INTERVAL, CHANNELING_TIME[lvl - 1]) cbChanneling ->
				let a = caster.getPos().polarOffset(GetRandomReal(PI, -PI).asAngleRadians(), AOE * 0.5).withTerrainZ(50)
				let b = target.polarOffset(GetRandomReal(PI, -PI).asAngleRadians(), GetRandomReal(0, AOE - SPAWN_COLLISION_SIZE)).withTerrainZ()
				let mid = a.lerp(b, 0.5)
				let control = vec3(mid.x, mid.y, 2 * (mid.z + PROJECTILE_ARC_HEIGHT) - 0.5 * (a.z + b.z))
				let projectile = addEffect(PROJECTILE_MODEL, a)
				..setYaw(a.angleTo2d(b))
				..setScale(SPAWN_SCALE)
				addEffect(PROJECTILE_MODEL, a)..setScale(SPAWN_SCALE)..destr()
				doPeriodicallyTimed(ANIMATION_PERIOD, PROJECTILE_FLIGHT_TIME) cbProjectile ->
					if not cbProjectile.isLast()
						projectile.setPos(a.bezier3(control, b, cbProjectile.progress()))
					else
						projectile.destr()
						forUnitsInRange(b.toVec2(), LANDING_AOE) (unit target) ->
							if caster.isEnemyOf(target.getOwner())
								caster.damageTarget(target, LANDING_DAMAGE, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)
						let spawn = createUnit(caster.getOwner(), UNIT_ID, b, a.angleTo2d(b))
						..setAnimation("birth")
						..setBaseDamage(SPAWN_DAMAGE_BASE[lvl - 1], 0)
						..pauseEx()
						doAfter(SPAWN_BIRTH_ANIM_DURATION) () ->
							spawn..setAnimation("stand")
							..setTimedLife(SPAWN_LIFETIME)
							..unpauseEx()
						// By unknown reasons the spawn getting fly height
						// equal to its z-coord even tho the model stands
						// on the right height.
						spawn.setFlyHeight(0, 0)
						flashEffect(PROJECTILE_MODEL, b)
				if cbChanneling.isLast()
					channelingUnits.remove(caster)
					destroy cbChanneling
			channelingUnits.put(caster, cbChanneling)  

		EventListener.add(EVENT_PLAYER_UNIT_SPELL_ENDCAST) () ->
			if channelingUnits.has(EventData.getTriggerUnit())
				destroy channelingUnits.getAndRemove(EventData.getTriggerUnit())


init
	LavaSpawn.onInit()
