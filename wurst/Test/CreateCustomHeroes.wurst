package CreateCustomHeroes
import HashMap
import CustomHero
import ChatCommand
import TestMode
import PlayerCustomHero


constant CREATE_ALL = "CreateAllCustomHeroes"
constant CREATE_ALL_SHORT = "cach"
constant CREATE_BY_NAME = "CreateCustomHero"
constant CREATE_BY_NAME_SHORT = "cch"
constant REMOVE_ALL = "RemoveCustomHeroes"
constant REMOVE_ALL_SHORT = "rch"

let heroByName = new IterableMap<string, int>
let createdHeroes = CreateGroup()


function initTestMode()
	var cb = ChatCommand.register(CREATE_ALL) subcommand ->
		for name in heroByName
			let p = EventData.getTriggerPlayer()
			let hero = createUnit(p, heroByName.get(name), p.getCustomHero().getPos(), GetRandomReal(-180, 180).asAngleDegrees())
			createdHeroes.add(hero)

	ChatCommand.register(CREATE_ALL_SHORT, cb) 

	cb = ChatCommand.register(CREATE_BY_NAME) name ->
		if heroByName.has(name)
			let p = EventData.getTriggerPlayer()
			let hero = createUnit(p, heroByName.get(name), p.getCustomHero().getPos(), GetRandomReal(-180, 180).asAngleDegrees())
			createdHeroes.add(hero)
		else
			printTimedToPlayer("No hero with such name.", 15, EventData.getTriggerPlayer())

	ChatCommand.register(CREATE_BY_NAME_SHORT, cb)

	cb = ChatCommand.register(REMOVE_ALL) (string subcommand) ->
		let p = EventData.getTriggerPlayer()
		for hero in createdHeroes
			if hero.getOwner() == p
				hero.remove()

	ChatCommand.register(REMOVE_ALL_SHORT, cb)


init
	for id in CustomHero.meleeIds
		heroByName.put(GetObjectName(id).toLowerCase(), id)
	
	TestMode.onEnable() ->
		initTestMode()