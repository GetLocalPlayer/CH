package ItemOwnership
import ClosureEvents
import OrderIds

constant KEEP_CHARGED_NEUTRAL = true

/** These types' ownership is ignored. */
function isIgnoredType(itemtype t) returns boolean
	return t == ITEM_TYPE_ARTIFACT


init
	EventListener.add(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER) ->
		let orderId = EventData.getIssuedOrderId()
		let targetItem = EventData.getOrderTargetItem()
		if targetItem != null and orderId == OrderIds.smart
			let u = EventData.getTriggerUnit()
			let itemPlayer = targetItem.getPlayer()
			if not isIgnoredType(targetItem.getItemtype())
				if itemPlayer.getId() != PLAYER_NEUTRAL_PASSIVE and itemPlayer != u.getOwner()
					u.issuePointOrderById(OrderIds.move, targetItem.getPos())

	EventListener.add(EVENT_PLAYER_UNIT_SELL_ITEM) ->
		let buyer = EventData.getBuyingUnit()
		let soldItem = EventData.getSoldItem()
		if KEEP_CHARGED_NEUTRAL and soldItem.getItemtype() == ITEM_TYPE_CHARGED
			soldItem.setPlayer(players[PLAYER_NEUTRAL_PASSIVE], true)
		else
			soldItem.setPlayer(buyer.getOwner(), true)

	if KEEP_CHARGED_NEUTRAL
		EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
			let pickedUpItem = EventData.getManipulatedItem()
			if pickedUpItem.getItemtype() == ITEM_TYPE_CHARGED
				pickedUpItem.setPlayer(players[PLAYER_NEUTRAL_PASSIVE], true)